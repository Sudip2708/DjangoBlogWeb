# Generated by Django 5.0.4 on 2024-05-09 09:05

import django.db.models.deletion
import taggit.managers
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Category Slug')),
                ('count', models.IntegerField(default=0, verbose_name='Category Count')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked_user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_author', to=settings.AUTH_USER_MODEL, verbose_name='Linked User')),
                ('name', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Author Name')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Author Slug')),
                ('profile_picture', models.ImageField(default='images/profile_pictures/default.jpg', upload_to='images/profile_pictures/authors/', verbose_name='Profile Picture')),
                ('profile_picture_thumbnail', models.ImageField(default='images/profile_pictures/default.jpg', upload_to='images/profile_pictures/authors/', verbose_name='Profile Picture Thumbnail')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_articles', to='articles.articleauthor', verbose_name='Article Author')),
                ('title', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Article Title')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Article Slug')),
                ('overview', models.TextField(blank=True, null=True, verbose_name='Article Overview')),
                ('content', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Article Content')),
                ('main_picture_max_size', models.ImageField(default='images/articles/no-image.jpg', upload_to='images/articles/main_picture/', verbose_name='Article Main Picture Max-Size')),
                ('main_picture_for_article', models.ImageField(default='images/articles/no-image.jpg', upload_to='images/articles/main_picture/', verbose_name='Article Main Picture')),
                ('main_picture_preview', models.ImageField(default='images/articles/no-image.jpg', upload_to='images/articles/main_picture/', verbose_name='Article Main Picture Preview')),
                ('main_picture_thumbnail', models.ImageField(default='images/articles/no-image.jpg', upload_to='images/articles/main_picture/', verbose_name='Article Main Picture Miniature')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='linked_articles', to='articles.articlecategory', verbose_name='Article Category')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Article Tag')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Article Created Date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Article Updated Date')),
                ('published', models.DateTimeField(blank=True, null=True, verbose_name='Article Published Date')),
                ('status', models.CharField(blank=True, choices=[('drafted', 'Drafted'), ('publish', 'Publish'), ('archive', 'Archive')], max_length=20, verbose_name='Article Status')),
                ('next_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='articles.article', verbose_name='Next Article')),
                ('previous_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous', to='articles.article', verbose_name='Previous Article')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='articles.article', verbose_name='Comment Article')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_comments', to=settings.AUTH_USER_MODEL, verbose_name='Comment User')),
                ('content', models.TextField(verbose_name='Comment Content')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Comment Created')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_count', to='articles.article', verbose_name='View Article')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_view_count', to=settings.AUTH_USER_MODEL, verbose_name='View User')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='View Created')),
            ],
        ),
    ]
