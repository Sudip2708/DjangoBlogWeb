Instalace Django:
$ pip3 install django

Výpis příkazů:
$ django-admin

Vytvoření projektu:
$ django-admin startproject django_project

Vstoupení do složky projektu:
$ cd .\django_project\

Spuštění Django úvodní stránky:
$ python manage.py runserver

Vytvoření složky a souborů pro aplikaci:
$ python manage.py startapp blog

###############################################

Vytvoření odkazů na stránky:
1) views.py - definice stránek
2) vytvořit urls.py - definice přístupové adresy

###############################################

Vytvoření stránek:
1) Vytvořit složku templates
2) Uvnitř ní vytvořit složku blog
3) Uvnitř vytvořit html soubory pro jednotlivé stránky
4) Ve složce Projekt v souboru settings.py připsat do instalovaných aplikací: 'blog.apps.BlogConfig', (nezapomenout na čárku)

CSS:
1) Vytvořit složku static
2) Uvnitř ní vytvořit složku blog
3) Uvnitř vytvořit soubor CSS
4) Zapsat do base.html {% load static %} nahoru + static
5) Pro zobrazení je dobré restartovat server

###############################################

Přihlášení se do Admin sekce:

1) V terminálu:

Vytvořit migraci:
$ python manage.py makemigrations

Spustit migraci:
$ python manage.py migrate

Nastavit Super User:
$ python manage.py createsuperuser

Vyplnit:
Username (leave blank to use 'sudip2708'): Sudip2708
Email address: daliborsova@seznam.cz
Password:
Password (again):

Spustit server:
$ python manage.py runserver

2) Na stránce zadat /admin a přihlásit se zadanými přihlašovacími údaji.

###############################################

Vytvoření databáze:

1) Ve složce blog otevřít soubor models.py a zapsat třídu pro databázy

Příprava migrace dat do Django admin:
$ python manage.py makemigrations
(vytvoří se soubor: blog\migrations\0001_initial.py)

Kontrola sql příkazu:
$ python manage.py sqlmigrate blog 0001

Migrovat data do Django admin:
$ python manage.py migrate

Otevření Shellu:
$ python manage.py shell

Příkazy na prohlížení dat databáze:
>>> from blog.models import Post
>>> from django.contrib.auth.models import User
>>> User.objects.all()
<QuerySet [<User: Sudip2708>, <User: TestUser1>]>
>>> User.objects.last()
<User: TestUser1>
>>> User.objects.filter(username='Sudip2708').first()
<User: Sudip2708>

Vybrání autora:
>>> user = User.objects.filter(username='Sudip2708').first()

Kontrola příspěvků:
>>> Post.objects.all()

Vytvoření příspěvku:
>>> post_1 = Post(title='Blog1', content='First Post Content', author=user)

Vložení příspěvku do databáze:
>>> post_1.save()

Příkazy na prohlížení příspěvků:
>>> post = Post.objects.first()
>>> post
<Post: Blog1>
>>> post.content
'First Post Content'
>>> post.date_posted
datetime.datetime(2023, 12, 11, 12, 15, 4, 91735, tzinfo=datetime.timezone.utc)
>>> post.author
<User: Sudip2708>
>>> post.author.email
'daliborsova@seznam.cz'


Prohlížení příspěvků od uživatele:
>>> user.post_set
<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x0000028296E2B750>

>>> user.post_set.all()
<QuerySet [<Post: Blog1>]>

Vytvoření příspěvku pro uživatele:
>>> user.post_set.create(title='blog 2', content='The second post!')
<Post: blog 2>

Odchod z Shellu:
>>> exit()

###############################################

(Přepsat kód na data z databáze)
Odkaz na definici vzhledu data:
https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#date

###############################################

Zobrazení dat nově vytvořené databáze v účtu admin:
1) Otevřít soubor admin.py
2) Zapsat:
from .models import Post
admin.site.register(Post)

Po té se již objeví databáze v účtu admin a zde se dá plně upravovat.

###############################################

Vytvoření nové aplikace pro registraci uživatelů:
$ python manage.py startapp users

Přidání aplikace do seting:
1) Ve složce projektu kliknout na settings.py
2) Najít INSTALLED_APPS
3) Dopsat: 'users.apps.UsersConfig', (nezapomenout na čárku)

Nastavit pohled:
1) Otevřít ve složce users soubor views.py
2) Zapsat pohled

Vytvoření stránek:
1) Vytvořit složku templates
2) Uvnitř ní vytvořit složku users
3) Uvnitř vytvořit html soubor pro stránku

Zapsat aplikaci do projektu:
1) Otevřít Django_project a v něm soubor urls.py
2) Dopsat:
from users import views as user_views
path('register/', user_views.register, name='register'),

Doinstalovat Crispy Forms a bootstrap4:
$ pip3 install django-crispy-forms
$ pip3 install crispy-bootstrap4

Přidání Crispy do settings:
1) Ve složce projektu kliknout na settings.py
2) Najít INSTALLED_APPS
3) Dopsat: 'crispy_forms', (nezapomenout na čárku)
4) Dopsat: 'crispy_bootstrap4', (nezapomenout na čárku)
5) Dojet úpně na konec stránky a dopsat: CRISPY_TEMPLATE_PACK = 'bootstrap4'

###############################################

Vytvoření možnosti přihlásit se:

###############################################

Vytvoření modelu pro uživatele s fotkou:
1) Upravit model.py
2) Nainstalovat pillow
$ pip3 install Pillow
3) Migrovat:
$ python manage.py makemigrations
$ python manage.py migrate
4) registrovat model v admin.py

###############################################

Úprava profilu + změna velikosti fotky:

###############################################

Vytváření, úprava a mazání příspěvků:

###############################################

Stránkování:
Nalití .json dat do databáze (.json soubor má být v kořenovém adresáři aplikace):
$ python manage.py shell
>>> import json
>>> from blog.models import Post
>>> with open('posts.json') as f:
...     posts_json = json.load(f)
...
>>> for post in posts_json:
...     post = Post(title=post['title'], content=post['content'], author_id=post['user_id'])
...     post.save()
...
>>> exit()

###############################################

Nastavení odesílání mailu pro resetování hesla:

###############################################